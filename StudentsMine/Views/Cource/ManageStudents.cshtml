
@{
    ViewBag.Title = "ManageStudents";
}

<div ng-controller="studentsCtrl" id="student-page">
    <div style="text-align:left;">
        <a href="/Student/CreateStudent/@ViewBag.CourseId" class="btn btn-primary">
            Create new students
        </a>
        <a href="/Student/AddStudentToCourse/@ViewBag.CourseId" class="btn btn-primary">
            Add students by email
        </a>
</div>
    <div id="active-students">
        <div ng-mouseleave="hideInfoButton(this)" ng-mouseover="showInfoButton(this)" class="transformable" ng-repeat="student in Students" ng-class="!isOpen ? 'student-presentation':'student-presentation-open'">
            <div>
                Name:
                <br />
                <div> {{ !isOpen?student.Name.substring(0 , 10):student.Name }}</div>
                Email:
                <br />
                <div> {{ !isOpen?student.Email.substring(0 , 10):student.Email }}</div>
                <div ng-hide="!isOpen"><access-data></access-data></div>
                <div class="show-data-button" ng-hide="isHiden" ng-click="openData(this , student.Id , @ViewBag.CourseId)"><b>Show</b></div>
            </div>
        </div>
    </div>
    <div id="ordered-students">
        <div ng-repeat="student in orderedStudents" class="student-order">    
            <div style="display:inline-block;">
                <div>Name: {{ student.Name }}</div>
                <div>Email: {{ student.Email }}</div>
            </div>
            <div class="btn btn-success" >Remember</div>
        </div>
    </div>
</div>
<script>
    app.directive("accessData" , function($http){
        return {
            restrict : "E",
            templateUrl: '/AngularTemp/_accessBlock.html',
            link: function(scope){
                scope.course = @ViewBag.CourseId;
                scope.updateStudentAccess = function(studentId , repeateElement){
                    console.log(repeateElement.access);
                    $http({method:"POST" , url:"/Cource/ChangeAccessToCourse?courseId="+scope.course+"&studentId="+studentId , data:JSON.stringify({'access':repeateElement.access})}).then(function(result){
                        if (result.data) {
                            toastr.success('Was successfucly changed');
                        }else{
                            toastr.error(result.ErrorMessage);
                        }
                    })
                }
            }
        }
    })


    app.controller('studentsCtrl', function ($scope, $http) {
        $scope.courseId = @ViewBag.CourseId;
        $scope.isHiden = true;
        $scope.isOpen = false;
        $http({
            method: "GET",
            url: "/Cource/GetAllStudents?courseId=" + @ViewBag.CourseId
            }).then(function (result) {
                $scope.Students = result.data
            })

        $http({
            method: "GET",
            url: "/Cource/GetAllOrders?courseId=" + @ViewBag.CourseId
            }).then(function (result) {
                console.log(result);
            $scope.orderedStudents = result.data
        })
        $scope.showInfoButton = function (repeateElement) {
            repeateElement.isHiden = false;
        }
        $scope.hideInfoButton = function(repeateElement){
            repeateElement.isHiden = true;
        }
        $scope.openData = function(repeateElement , id , courseId){
            $http({
                method: "GET",
                url: "/Cource/GetAccessToCourse?courseId="+courseId+"&studentId="+id
            }).then(function(result){
                console.log(repeateElement.course);
                console.log( repeateElement.updateStudentAccess);
                repeateElement.access = {}
                repeateElement.access.AccessToCourse = result.data.AccessToCourse;
                repeateElement.access.CanUploadFiles = result.data.CanUploadFiles;
                repeateElement.access.CanDownloadFiles = result.data.CanDownloadFiles;
                repeateElement.access.AccessToHomeWork = result.data.AccessToHomeWork;
            })
            repeateElement.isOpen = !repeateElement.isOpen;
        }
    })
</script>