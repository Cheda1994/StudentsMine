@model IQueryable<StudentsMine.Models.HomeWork>
@{
    ViewBag.Title = "TeacherHWIndex";
}
<script>
    function getHomeWorkProjects(id) {
        $.ajax({
            url: "/Cource/GetHWProjectsList?homeworkId=" + id,
            type: "GET",
            contentType: "application/json",
            success: function (projects) {
                $("#home-work-prop-holder").fadeOut(100)
                var body = $("#selected-homework")[0];
                body.innerHTML = ""
                projects.Projects.forEach(function (project , index) {
                    feedHWProject(project)
                })
            }
        })
    }

    function feedHWProject(project)
    {
        var body = $("#selected-homework")[0];
        var projectRow = document.createElement("div")
        var projectInfo = document.createElement("div")
        var downloadProjectLink = document.createElement("a")
        downloadProjectLink.onclick = function () {
            DownloadFiel(project.ProjectId)
        }
        downloadProjectLink.text = "Download";
        projectInfo.appendChild(downloadProjectLink);
        var studentName = document.createElement("span")
        var projectMark = document.createElement("span")
        var projectWasUploaded = document.createElement("span")
        var inputMark = document.createElement("input")
        var toggleButton = document.createElement("span")
        inputMark.type = "number"
        inputMark.setAttribute("id" , "mark_"+project.ProjectId)
        projectInfo.appendChild(inputMark);
        var buttonChangeMark = document.createElement("a");
        buttonChangeMark.text = "Change mark"
        buttonChangeMark.onclick = function () {
            changeMark(project.ProjectId) 
        }
        var buttonBlockThisProject = document.createElement("a");
        buttonChangeMark.onclick = function () {
            changeMark(project.ProjectId) 
        }
        projectInfo.appendChild(buttonChangeMark);
        projectInfo.setAttribute("class" , "project-info");
        projectInfo.setAttribute("id" , "project-info_"+project.ProjectId);
        studentName.textContent = project.StudentName;
        projectMark.textContent = project.CurrentMark;
        toggleButton.textContent = "Open"
        toggleButton.onclick = function(){
            OpenProjectInfo(project.ProjectId)
        }
        projectRow.setAttribute("class" , "project-row");
        projectRow.appendChild(studentName);
        projectRow.appendChild(projectMark);
        projectRow.appendChild(toggleButton);
        projectRow.appendChild(projectInfo);
        body.appendChild(projectRow);
    }

    function OpenProjectInfo(id){
        $("#project-info_"+id).toggle(400);
    }

    function DownloadFiel(projectId) {
        $.ajax({
            url:"/Cource/GetFile?projectId="+projectId,
            type:"GET",
            success:function(file){
                var hiddenElement = document.createElement('a');
                hiddenElement.href = file;
                hiddenElement.target = '_blank';
                hiddenElement.download = 'download';
                hiddenElement.click();

            }
        })
    }

    function blockHomeWork(id , caller) {
        console.log(caller)
        $.ajax({
            url:"/Cource/BlockHomeWork?homeworkId="+id,
            type: "POST",
            contentType: "application/json",
            success: function(data){
                $.amaran({
                    'message': 'Was succesfuly ' + caller.innerText +'ed',
                    'position': 'bottom',
                    'outEffect': 'slideLeft'
                });
            }
        })
    
    }

    function removeHomeWork(homeworkId , node){
        $.ajax({
            url:"/Cource/RemoveHW?homeworkId="+homeworkId,
            type:"GET",
            contentType: "application/json",
            success:function(result){
                if (result.Result) {
                    $(this).fadeOut(500);

                }else{
                    $.amaran({
                        'message': result.ErrorMessage ,
                        'position': 'bottom',
                        'outEffect': 'slideLeft'
                    });
                }

            }
        })
    }

    function changeMark(projectId){
        var mark = parseInt($("#mark_"+projectId).val());
        console.log(mark == null);
        if (isNaN(mark)) {
            $.amaran({
                'message': 'Mark field have to hold',
                'position': 'bottom',
                'outEffect': 'slideLeft'
            });
        }else{
            $.ajax({
                url:"/Cource/ChangeMark?projectId="+projectId+"&mark="+mark,
                type:"GET",
                contentType: "application/json",
                success:function(file){
                    if (file.Result) {
                        $.amaran({
                            'message': 'Mark was changed',
                            'position': 'bottom',
                            'outEffect': 'slideLeft'
                        });
                    }
                    else {
                        $.amaran({
                            'message': file.ErrorMessage,
                            'position': 'bottom',
                            'outEffect': 'slideLeft'
                        });
                    }
                }
            })
        }
    }
</script>
<div id="home-work-list">
    <table>
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Description
                </th>
                <th>
                    Date
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr class="homework-data-row" onclick="getHomeWorkProjects(@item.Id)">
                <td>@item.Title</td>
                <td>@item.Description</td>
                <td>@item.Create</td>
                <td>Edit</td>
                <td onclick="removeHomeWork(@item.Id , this )">Remove</td>
                @if (@item.Condition != null)
                {
                    if (@item.Condition.IsBlocked)
                    {
                        <td onclick="blockHomeWork(@item.Id , this)"> UnBlock</td>
                    }                
                    else
                    {
                        <td onclick="blockHomeWork(@item.Id , this)"> Block</td>
                    }
                }
                else
                {
                    <td onclick="blockHomeWork(@item.Id , this)"> Block</td>
                }
            </tr>
        }
        </tbody>
    </table>

</div>
<div id="selected-homework">
    <div id="home-work-prop-holder">
        Selected home work
    </div>
</div>
<iframe id="fileFrame" src="" hidden></iframe>